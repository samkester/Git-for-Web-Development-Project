Codepen link: https://codepen.io/samkester/pen/wvMmxov

Review questions:

    1. What is Semantic HTML? 
        Semantic HTML tags add "labels" to different pieces of HTML that other programs can read so that they understand the structure and purpose of the document better. This means that e.g. screen readers can distinguish core content such as an article from supporting content such as navigation, headers, and footers.
    2. What is HTML used for? 
        HTML is a "markup language"; it is designed to add formatting and structure (and with semantic HTML, descriptive labels) to underlying text.
    3. What is an attribute and where do we put it? 
        Attributes are pieces of information attached to HTML tags that are not content, i.e., not visible to the user.
        Attributes are put inside the opening tag: <p class="example">
    4. What is the h1 tag used for? How many times should I use it on a page?
        The H1 tag is the most significant heading. Generally it will only be used once.
    5. Name two tags that have required attributes
        img requires a source "src" to read the image from
        a requires a reference "href" to direct the link to
    6. What do we put in the head of our HTML document? 
        Anything that does not appear in the visible part of the page (the body); this includes the title as well as references to other files such as .css files or fonts.
    7. What is an id? 
        An ID is a unique name given to an object that can be referred to by anchor tags, CSS, or JavaScript.
    8. What elements can I add an id to? 
        Any element.
    9. How many times can I use the same id on a page? 
        Only once.
    10. What is a class? 
        Classes are non-unique descriptions given to objects.
    11. What elements can I add a class to? 
        Any element.
    12. How many times can I use the same class on a page? 
        Any number of times.
    13. How do I get my link to open in a new tab?
        Using the "target" attribute with a value of "_blank".
        <a target="_blank">
    14. What is the alt attribute in the image tag used for? 
        The alt text is read by screen readers and other accessibility tools, and displayed if the image doesn't load.
    15. How do I reference an id?
        Using the # character.
    16. What is the difference between a section and a div
        Section and div have the same default properties; in terms of structure and layout, they are identical.
        However, section is semantic; it identifies part of the page's main body text.
    17. What is CSS used for? 
        CSS applies styles to HTML to change their appearance and layout on the page.
    18. How to we select an element? Example - every h2 on the page
        A tag is selected simply by its name:
        h2 {            
        }
    19. What is the difference between a class and an id? - Give me an example of when I might use each one
        IDs are unique; only one thing in the document will ever have that ID. It might be used to define an anchor to scroll partway down a page.
        Classes are not unique; even if there's only one at the moment, there might be others later. They are usually used for formatting purposes, e.g., changing colors.
    20. How do we select classes in CSS?
        Using the . prefix:
        .class-name {            
        }
    21. How do we select a p element with a single class of “human””?
        p.human {            
        }
    22. What is a parent child selector? When would this be useful? 
        A parent/child selector selects objects that are children of a given object. This allows us to give formatting to objects based on where they are in the page.
        For example, we might style links in the navigation area `nav a` differently from links in body text `section a`.
    23. How do you select all links within a div with the class of sidebar?
        div.sidebar a{            
        }
    24. What is a pseudo selector?
        Pseudo-classes are based on the current state of an object. For instance, object:hover selects the object while the mouse is over it.
        Pseudo-elements are based on their location within an object. For instance, object::first-line selects the first line of text inside an object.
    25. What do we use the change the spacing between lines?
        The line-height property.
    26. What do we use to change the spacing between letters?
        The letter-spacing property.
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
        The text-transform property, with values of "uppercase", "lowercase", and "capitalize" respectively.        
    28. How do I add a 1px border around my div that is dotted and black?
        div{
            border: 1px black dotted;
        }
    29. How do I select everything on the page? 
        *{
        }
    30. How do I write a comment in CSS?
        /* your comment here */
    31. How do I find out what file I am in, when I am using the command line? 
        pwd
    32. Using the command line - how do I see a list of files/folders in my current folder?
        ls
    33. How do I remove a file via the command line? Why do I have to be careful with this? 
        rm [filename]
        This is dangerous because it has no prompt or undo function, unlike deleting with the GUI or with VSCode.
    34. Why should I use version control? 
        1) it prevents you from losing work if your computer suddenly dies or your local files are deleted, corrupted, etc.
        2) it allows you to quickly reset your project to a previous working state if something goes wrong.
        3) it stores old files so that you can refer to them if necessary without cluttering up your current workspace.
    35. How often should I commit to github?
        When there is a significant difference between the local state and the repo's state. That is, you've added or changed something important enough to be worth backing up, like adding a new feature or reorganizing all your files.
    36. What is the command we would use to push our repo up to github? 
        *git add .* tells it to prepare all files to be pushed (*git add filename* would prepare just one file)
        *git commit "commit message"* tells it to commit to the branch locally and adds the commit message.
        *git push* sends the committed local branch to the remote repo. The first time per branch, the command *git push -u origin branch-name* tells it how to connect that branch with the repo. After that, it will remember that step.
    37. Walk me through Lambda's git flow. 
        1 - Fork the provided repo, to make a copy separate from other students'.
        2 - Add the TL as a collaborator to the forked repo.
        3 - Clone the repo to a local folder.
        4 - Check out the local copy to a different branch.
        5 - Work on the project.
        6 - git add, git commit, and git push to commit files to the branch and send it back to the remote repo.
        7 - Repeat 5 & 6 as necessary.
        8 - When the project is complete, submit a pull request, requesting that the branch be merged into the master branch of the forked repo (NOT the master branch of the original). Add the TL as the reviewer of this request. The TL will then review the project and approve the PR if it's complete.

Stretch Questions

    1. What is the difference between an inline element and a block element?
        Block elements always begin a new line and takes up the full width of the page unless instructed not to.
        Inline elements will render in the same line and take up only as much space as needed.
    2. What happens when an element is positioned absolutely? 
        It is positioned according to the given coordinates, measured from the start of the page.
        If one of its ancestors is absolute, relative, or fixed, it will measure from the start of that element instead.
    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 
        display: inline-block;
    4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default
        block: div, ul, p
        inline: span, a
        inline-block: img
    5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them? 
        The box model is about how all `block` and `inline-block` elements have space allocated to them on the page, and the distinction between the space assigned to their content (their `height` and `width`) and the total space required (which includes padding, border, and margin). The key is to note that borders, margins, and padding need to have space allocated to them in their parent or the overall document or they won't fit correctly. For instance, if a column fits into a space 600px wide and has 10px padding, its internal width is only 580px. If we want to fit two images inside it side-by-side, they each have 290 px of space including their own margins, padding, borders, and space.